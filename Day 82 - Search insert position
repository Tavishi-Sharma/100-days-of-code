/*
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You must write an algorithm with O(log n) runtime complexity.

Sample test case 1:

Input: nums = [1,3,5,6], target = 5
Output: 2

Sample test case 2:

Input: nums = [1,3,5,6], target = 2
Output: 1

Sample test case 3:

Input: nums = [1,3,5,6], target = 7
Output: 4
*/
class Solution {
    public int searchInsert(int[] nums, int target) {
        int st=0; int end=nums.length-1;
        int ans=0;
        while(st<=end){
            int mid=(st+end)/2;
            if(nums[mid]<target){
                st=ans=mid+1;
                
            }
            else if(nums[mid]>target){
                end=mid-1;
            }else{
                return mid;
            }
        }
        return ans;
    }
}
