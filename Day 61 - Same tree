/*
Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.
Note:- Here the function takes p and q array as argument whichis the preorder traversal of the tree.

Sample test case 1:-
Input: p = [1,2,3], q = [1,2,3]
Output: true

Sample test case 2:-
Input: p = [1,2], q = [1,null,2]
Output: false

Sample test case 3:-
Input: p = [1,2,1], q = [1,1,2]
Output: false
*/
//-----------------------------Source code------------------------
/*
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
    // p and q are both null
    if (p == null && q == null) return true;
    // one of p and q is null
    if (q == null || p == null) return false;
    if (p.val != q.val) return false;
    return isSameTree(p.right, q.right) &&
            isSameTree(p.left, q.left);
    }
}
