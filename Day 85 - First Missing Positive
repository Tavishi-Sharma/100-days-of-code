/*
Given an unsorted integer array nums, return the smallest missing positive integer.

You must implement an algorithm that runs in O(n) time and uses constant extra space.

Sample test case 1:

Input: nums = [1,2,0]
Output: 3
Explanation: The numbers in the range [1,2] are all in the array.

Sample test case 2:

Input: nums = [3,4,-1,1]
Output: 2
Explanation: 1 is in the array but 2 is missing.

Sample test case 3:

Input: nums = [7,8,9,11,12]
Output: 1
Explanation: The smallest positive integer 1 is missing.
*/
class Solution {
    public int firstMissingPositive(int[] nums) {
        int check=1;
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            if(nums[i]<check){
                continue;
            }
            else if(nums[i]==check){
                check++;
            }
            else{
                return check;
            }

        }
        return check;

    }
}
